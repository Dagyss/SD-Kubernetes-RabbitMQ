apiVersion: apps/v1
kind: Deployment
metadata:
  name: reconstructor
  namespace: apps
  labels:
    io.kompose.service: reconstructor
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: reconstructor
  template:
    metadata:
      labels:
        io.kompose.service: reconstructor
    spec:
      nodeSelector:
        role: app
      containers:
        - name: reconstructor
          image: dagyss/reconstructor:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: EUREKA_CLIENT_FETCH
              value: "true"
            - name: EUREKA_CLIENT_REGISTER
              value: "true"
            - name: EUREKA_SERVICE_URL_DEFAULTZONE
              value: http://master.apps.svc.cluster.local:8761/eureka
            - name: GCS_BUCKET_NAME
              value: bucket-imagenes-sobel
            - name: SERVER_PORT
              value: "80"
            - name: SPRING_APPLICATION_NAME
              value: reconstructor
            - name: SPRING_REDIS_HOST
              value: redis.infra.svc.cluster.local
            - name: SPRING_REDIS_PORT
              value: "6379"
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            - name: SPRING_RABBITMQ_HOST
              value: rabbitmq.infra.svc.cluster.local
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: rabbitmq-user
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: rabbitmq-password
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      restartPolicy: Always